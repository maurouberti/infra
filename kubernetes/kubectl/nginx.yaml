apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-configmap
  namespace: projeto
data:
  nginx.conf: |
    server {
        listen 80;
        listen [::]:80;

        server_name 127.0.0.1;

        root /usr/share/nginx/html;
        index index.html;

        # client_max_body_size 12M;
        charset utf-8;

        # fastcgi_read_timeout 300;
        # proxy_read_timeout 300;

        gzip on;
        gzip_vary on;
        gzip_comp_level 6;
        gzip_min_length 256;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

        location = /favicon.ico {
            access_log off;
            log_not_found off;
        }

        location = /robots.txt {
            access_log off;
            log_not_found off;
        }

        if ($http_user_agent ~* curl|Postman|LWP::Simple|BBBike|wget|msnbot|scrapbot) {
            return 403;
        }

        location ~* \.(css|gif|ico|jpeg|jpg|js|png)$ {
            expires 7d;
        }

        location ^~ /usuarios {
            fastcgi_pass phpfpm-service:9000;
            fastcgi_param SCRIPT_FILENAME /var/www/php-testes/public/index.php;
            fastcgi_param SCRIPT_NAME /index.php;
            include fastcgi_params;
        }

    }
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-load-balancer
  namespace: projeto
  annotations:
    service.beta.kubernetes.io/do-loadbalancer-name: "nginx-load-balancer"
    service.beta.kubernetes.io/do-loadbalancer-protocol: "http"
    service.beta.kubernetes.io/do-loadbalancer-redirect-http-to-https: "true"
    service.beta.kubernetes.io/do-loadbalancer-tls-ports: "443"
    service.beta.kubernetes.io/do-loadbalancer-certificate-name: "cert-k8s"
    service.beta.kubernetes.io/do-loadbalancer-disable-lets-encrypt-dns-records: "false"
    service.beta.kubernetes.io/do-loadbalancer-http-idle-timeout-seconds: "240"
    # service.beta.kubernetes.io/do-loadbalancer-size-unit: "3"
spec:
  type: LoadBalancer
  selector:
    app: nginx
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: nginx-port
    - name: https
      protocol: TCP
      port: 443
      targetPort: nginx-port
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: projeto
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx
    spec:
      imagePullSecrets:
        - name: registry-dohub
      containers:
        - name: nginx
          image: registry.digitalocean.com/dohub/maurouberti/nginx:latest
          ports:
            - name: nginx-port
              containerPort: 80
          resources:
            requests:
              cpu: "100m"   # 0.1 vCPU
              memory: "128Mi"  # 128MB
            limits:
              cpu: "500m"  # 0.5 vCPU
              memory: "256Mi"  # 256MB
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
      volumes:
        - name: config
          configMap:
            name: nginx-configmap
---